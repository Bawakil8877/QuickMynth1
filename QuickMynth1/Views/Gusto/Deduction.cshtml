@model QuickMynth1.Models.ViewModels.DeductionViewModel
@{
    const decimal Fee = 5m;
    var totalIfEntered = (Model.DeductionAmount ?? 0m) + Fee;
    bool canAfford = Model.AvailableFunds >= totalIfEntered;
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}
@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
<div>
    <p>Your available net pay this period: <strong>@Model.AvailableFunds:C</strong></p>
</div>

<form asp-action="Deduction" method="post">
    @Html.AntiForgeryToken()

    <input asp-for="EmployeeEmail" type="hidden" />
    <input asp-for="SelectedBenefitUuid" type="hidden" />

    <div class="form-group">
        <label>Benefit</label>
        <p class="form-control-plaintext">@Model.BenefitName</p>
    </div>

    <div class="form-group">
        <label asp-for="DeductionAmount"></label>
        <input asp-for="DeductionAmount" class="form-control" />
        <span asp-validation-for="DeductionAmount" class="text-danger"></span>
    </div>

    <button type="submit"
            class="btn btn-primary"
    @(canAfford ? "" : "disabled")>
        Submit Advance (includes $5 fee)
    </button>
    @if (!canAfford)
    {
        <p class="text-danger">
            You need at least @(Fee.ToString("C")) plus your advance amount in available funds.
        </p>
    }
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}


